{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { fetchSpaces } from \"../../services/api\";\nconst initialState = {\n  spaces: [],\n  loading: false,\n  error: null\n};\n\n// Async Thunk for API Call\nexport const getSpaces = createAsyncThunk(\"spaces/fetch\", async () => {\n  const response = await fetchSpaces();\n  return response;\n});\nconst spaceSlice = createSlice({\n  name: \"spaces\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getSpaces.pending, state => {\n      state.loading = true;\n    }).addCase(getSpaces.fulfilled, (state, action) => {\n      state.spaces = action.payload;\n      state.loading = false;\n    }).addCase(getSpaces.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message || \"Failed to fetch spaces\";\n    });\n  }\n});\nexport default spaceSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchSpaces","initialState","spaces","loading","error","getSpaces","response","spaceSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","reducer"],"sources":["D:/Developer/Programs/React/co-working-space-booking/src/store/slices/spaceSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { fetchSpaces } from \"../../services/api\";\r\n\r\ninterface Space {\r\n  id: number;\r\n  name: string;\r\n  price: string;\r\n  image: string;\r\n}\r\n\r\ninterface SpaceState {\r\n  spaces: Space[];\r\n  loading: boolean;\r\n  error: string | null;\r\n}\r\n\r\nconst initialState: SpaceState = {\r\n  spaces: [],\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\n// Async Thunk for API Call\r\nexport const getSpaces = createAsyncThunk(\"spaces/fetch\", async () => {\r\n  const response = await fetchSpaces();\r\n  return response;\r\n});\r\n\r\nconst spaceSlice = createSlice({\r\n  name: \"spaces\",\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getSpaces.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(getSpaces.fulfilled, (state, action) => {\r\n        state.spaces = action.payload;\r\n        state.loading = false;\r\n      })\r\n      .addCase(getSpaces.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message || \"Failed to fetch spaces\";\r\n      });\r\n  },\r\n});\r\n\r\nexport default spaceSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,SAASC,WAAW,QAAQ,oBAAoB;AAehD,MAAMC,YAAwB,GAAG;EAC/BC,MAAM,EAAE,EAAE;EACVC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,OAAO,MAAMC,SAAS,GAAGN,gBAAgB,CAAC,cAAc,EAAE,YAAY;EACpE,MAAMO,QAAQ,GAAG,MAAMN,WAAW,CAAC,CAAC;EACpC,OAAOM,QAAQ;AACjB,CAAC,CAAC;AAEF,MAAMC,UAAU,GAAGT,WAAW,CAAC;EAC7BU,IAAI,EAAE,QAAQ;EACdP,YAAY;EACZQ,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACP,SAAS,CAACQ,OAAO,EAAGC,KAAK,IAAK;MACrCA,KAAK,CAACX,OAAO,GAAG,IAAI;IACtB,CAAC,CAAC,CACDS,OAAO,CAACP,SAAS,CAACU,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC/CF,KAAK,CAACZ,MAAM,GAAGc,MAAM,CAACC,OAAO;MAC7BH,KAAK,CAACX,OAAO,GAAG,KAAK;IACvB,CAAC,CAAC,CACDS,OAAO,CAACP,SAAS,CAACa,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAC9CF,KAAK,CAACX,OAAO,GAAG,KAAK;MACrBW,KAAK,CAACV,KAAK,GAAGY,MAAM,CAACZ,KAAK,CAACe,OAAO,IAAI,wBAAwB;IAChE,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeZ,UAAU,CAACa,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}